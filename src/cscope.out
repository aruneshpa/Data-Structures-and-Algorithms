cscope 15 $HOME/Documents/Codes/leetcode/src               0000002205
	@1_bits.cpp

1 
	~<io¡»am
>

2 
usšg
 
Çme¥aû
 
	g¡d
;

3 
	$maš
() {

4 
ušt32_t
 
n
;

5 
cš
>>
n
;

6 
couÁ
 = 0;

7 
n
) {

8 
n
 =‚&(n-1);

9 
couÁ
++;

11 
cout
<<
couÁ
<<
’dl
;

13 
	}
}

	@Reverse_String.cpp

1 þas 
	cSÞutiÚ
 {

2 
	mpublic
:

3 
¡ršg
 
	$»v”£SŒšg
(
¡ršg
 
s
) {

4 
i
=0, 
j
=
s
.
	`size
()-1;

5 
i
<
j
) {

6 
c
 = 
s
[
i
];

7 
s
[
i
] = s[
j
];

8 
s
[
j
] = 
c
;

9 
i
++;
j
--;

11  
s
;

13 
	}
};

	@excelSheetColumnName.cpp

1 
	~<io¡»am
>

2 
usšg
 
Çme¥aû
 
	g¡d
;

3 
	$maš
() {

4 
n
;

5 
cš
>>
n
;

6 
¡ršg
 
s
 = "";

7 
n
>0) {

8 
c
 = (
n
-1)%26 + 'A';

9 
s
 = 
	`¡ršg
(1, 
c
) + s;

10 
n
 = (n-1)/26;

12 
cout
<<
s
<<
’dl
;

14 
	}
}

	@frequencysort.cpp

1 
	~<b™s/¡dc++.h
>

2 
	~<unÜd”ed_m­
>

4 
usšg
 
Çme¥aû
 
	g¡d
;

6 
¡ršg
 
	$äequ’cySÜt
(
¡ršg
 
s
) {

7 
unÜd”ed_m­
 <,> 
äeq
;

8 
veùÜ
<
¡ršg
> 
	`buck‘
(
s
.
	`size
()+1, "");

9 
¡ršg
 
»s
;

11 
c
:
s
è
äeq
[c]++;

13 auto& 
™
:
äeq
) {

14 
n
 = 
™
.
£cÚd
;

15 
c
 = 
™
.
fœ¡
;

16 
buck‘
[
n
].
	`­³nd
Ò, 
c
);

18 
i
=0; i<
buck‘
.
	`size
(); i++) {

19 
cout
 << 
i
 << " " << 
buck‘
[i] << 
’dl
;

21 
i
=
s
.
	`size
(); i>0; i--) {

22 if(!
buck‘
[
i
].
	`em±y
())

23 
»s
.
	`­³nd
(
buck‘
[
i
]);

25  
»s
;

26 
	}
}

29 
	$maš
() {

30 
¡ršg
 
s
;

31 
cš
 >> 
s
;

32 
cout
 << 
	`äequ’cySÜt
(
s
è<< 
’dl
;

34 
	}
}

	@reverse_bits.cpp

1 
	~<io¡»am
>

2 
usšg
 
Çme¥aû
 
	g¡d
;

4 
	$»v”£_b™s
(
n
) {

5 
âum
 = 0;

6 
boÞ
 
Œ
 = 
çl£
;

7 ià(((
n
>>31)&1) == 1) {

8 
cout
<<"Out"<<
’dl
;

9 
Œ
 = 
Œue
;

10 
n
 <<=1;

11 
n
 >>=2;

13 
i
=0;

14 
i
++ < 31 && 
n
 != 0) {

15 
âum
 |ð(
n
 & 1);

16 
n
>>=1;

17 
âum
<<=1;

19 
âum
<<ð32-
i
;

20 ià(
Œ
è
âum
|= 1;

21  
âum
;

22 
	}
}

24 
	$maš
() {

25 
n
;

26 
cš
>>
n
;

27 
cout
<<
	`»v”£_b™s
(
n
)<<
’dl
;

29 
	}
}

	@trailing.cpp

1 
	~<io¡»am
>

2 
usšg
 
Çme¥aû
 
	g¡d
;

4 
	$fšdZ”os
(
n
) {

5 
couÁ
 = 0;

6 
‹mp
 = 5;

7 
‹mp
 <=
n
) {

8 
couÁ
+ð
n
/
‹mp
;

9 
‹mp
*= 5;

11  
couÁ
;

12 
	}
}

14 
	$maš
() {

15 
n
;

16 
cš
>>
n
;

17 
cout
<<
	`fšdZ”os
(
n
)<<
’dl
;

19 
	}
}

	@
1
.
1
/usr/include
6
103
1_bits.cpp
Reverse_String.cpp
excelSheetColumnName.cpp
frequencysort.cpp
reverse_bits.cpp
trailing.cpp
